# Generated by Django 4.2.7 on 2025-07-14 17:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('frisbee_simulator_web', '0026_playertournamentstat_team'),
    ]

    operations = [
        migrations.CreateModel(
            name='UFADivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ufa_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UFAGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ufa_id', models.CharField(max_length=50, unique=True)),
                ('away_score', models.IntegerField(blank=True, null=True)),
                ('home_score', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(max_length=50)),
                ('start_timestamp', models.DateTimeField()),
                ('start_timezone', models.CharField(max_length=50)),
                ('streaming_url', models.URLField(blank=True, null=True)),
                ('update_timestamp', models.DateTimeField()),
                ('week', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UFAPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ufa_id', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='deep_bench_players',
            field=models.ManyToManyField(blank=True, related_name='deep_bench_players_teams', to='frisbee_simulator_web.player'),
        ),
        migrations.AddField(
            model_name='team',
            name='type',
            field=models.CharField(choices=[('UFA', 'UFA'), ('USAU', 'USAU')], max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='game',
            name='game_type',
            field=models.CharField(choices=[('Pool Play', 'Pool Play'), ('Pre-Quarterfinal', 'Pre-Quarterfinal'), ('Quarterfinal', 'Quarterfinal'), ('Semifinal', 'Semifinal'), ('Championship', 'Championship'), ('3rd-Place Final', '3rd-Place Final'), ('5th-Place Semifinal', '5th-Place Semifinal'), ('5th-Place Final', '5th-Place Final'), ('7th-Place Final', '7th-Place Final'), ('9th-Place Quarterfinal', '9th-Place Quarterfinal'), ('9th-Place Semifinal', '9th-Place Semifinal'), ('9th-Place Final', '9th-Place Final'), ('11th-Place Final', '11th-Place Final'), ('13th-Place Semifinal', '13th-Place Semifinal'), ('13th-Place Final', '13th-Place Final'), ('15th-Place Final', '15th-Place Final'), ('17th-Place Semifinal', '17th-Place Semifinal'), ('17th-Place Final', '17th-Place Final'), ('19th-Place Final', '19th-Place Final'), ('Exhibition', 'Exhibition'), ('UFA', 'UFA')], default='Exhibition', max_length=50),
        ),
        migrations.AlterField(
            model_name='player',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='frisbee_simulator_web.profile'),
        ),
        migrations.AlterField(
            model_name='player',
            name='primary_line',
            field=models.CharField(choices=[('OFFENSE', 'OFFENSE'), ('DEFENSE', 'DEFENSE'), ('BENCH', 'BENCH'), ('DEEP_BENCH', 'DEEP BENCH')], max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='player',
            name='primary_position',
            field=models.CharField(blank=True, choices=[('OFFENSE', 'OFFENSE'), ('DEFENSE', 'DEFENSE'), ('BENCH', 'BENCH'), ('DEEP_BENCH', 'DEEP BENCH')], max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='player',
            name='seasons',
            field=models.ManyToManyField(blank=True, null=True, related_name='seasons_players', to='frisbee_simulator_web.season'),
        ),
        migrations.AlterField(
            model_name='player',
            name='teams',
            field=models.ManyToManyField(blank=True, null=True, related_name='teams_players', to='frisbee_simulator_web.team'),
        ),
        migrations.AlterField(
            model_name='team',
            name='bench_players',
            field=models.ManyToManyField(blank=True, related_name='bench_players_teams', to='frisbee_simulator_web.player'),
        ),
        migrations.AlterField(
            model_name='team',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='frisbee_simulator_web.profile'),
        ),
        migrations.AlterField(
            model_name='team',
            name='d_line_cutters',
            field=models.ManyToManyField(blank=True, related_name='d_line_cutters_teams', to='frisbee_simulator_web.player'),
        ),
        migrations.AlterField(
            model_name='team',
            name='d_line_handlers',
            field=models.ManyToManyField(blank=True, related_name='d_line_handlers_teams', to='frisbee_simulator_web.player'),
        ),
        migrations.AlterField(
            model_name='team',
            name='d_line_hybrids',
            field=models.ManyToManyField(blank=True, related_name='d_line_hybrids_teams', to='frisbee_simulator_web.player'),
        ),
        migrations.AlterField(
            model_name='team',
            name='d_line_players',
            field=models.ManyToManyField(blank=True, related_name='d_line_players_teams', to='frisbee_simulator_web.player'),
        ),
        migrations.AlterField(
            model_name='team',
            name='location',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='team',
            name='mascot',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='team',
            name='o_line_cutters',
            field=models.ManyToManyField(blank=True, related_name='o_line_cutters_teams', to='frisbee_simulator_web.player'),
        ),
        migrations.AlterField(
            model_name='team',
            name='o_line_handlers',
            field=models.ManyToManyField(blank=True, related_name='o_line_handlers_teams', to='frisbee_simulator_web.player'),
        ),
        migrations.AlterField(
            model_name='team',
            name='o_line_hybrids',
            field=models.ManyToManyField(blank=True, related_name='o_line_hybrids_teams', to='frisbee_simulator_web.player'),
        ),
        migrations.AlterField(
            model_name='team',
            name='o_line_players',
            field=models.ManyToManyField(blank=True, related_name='o_line_players_teams', to='frisbee_simulator_web.player'),
        ),
        migrations.AlterField(
            model_name='team',
            name='overall_rating',
            field=models.PositiveIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='team',
            name='players',
            field=models.ManyToManyField(blank=True, related_name='players_teams', to='frisbee_simulator_web.player'),
        ),
        migrations.CreateModel(
            name='UFAPlayerStatsYear',
            fields=[
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='frisbee_simulator_web.ufaplayer')),
                ('year', models.IntegerField()),
                ('assists', models.IntegerField()),
                ('goals', models.IntegerField()),
                ('hockey_assists', models.IntegerField()),
                ('completions', models.IntegerField()),
                ('throw_attempts', models.IntegerField()),
                ('throwaways', models.IntegerField()),
                ('stalls', models.IntegerField()),
                ('callahans_thrown', models.IntegerField()),
                ('yards_received', models.IntegerField()),
                ('yards_thrown', models.IntegerField()),
                ('hucks_attempted', models.IntegerField()),
                ('hucks_completed', models.IntegerField()),
                ('catches', models.IntegerField()),
                ('drops', models.IntegerField()),
                ('blocks', models.IntegerField()),
                ('callahans_caught', models.IntegerField()),
                ('pulls', models.IntegerField()),
                ('ob_pulls', models.IntegerField()),
                ('recorded_pulls', models.IntegerField()),
                ('recorded_pulls_hangtime', models.IntegerField()),
                ('o_points_played', models.IntegerField()),
                ('o_points_scored', models.IntegerField()),
                ('d_points_played', models.IntegerField()),
                ('d_points_scored', models.IntegerField()),
                ('seconds_played', models.IntegerField()),
                ('o_opportunities', models.IntegerField()),
                ('o_opportunity_scores', models.IntegerField()),
                ('d_opportunities', models.IntegerField()),
                ('d_opportunity_stops', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UFATeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ufa_id', models.CharField(max_length=50, unique=True)),
                ('year', models.IntegerField()),
                ('city', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('full_name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=3)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('ties', models.IntegerField(default=0)),
                ('standing', models.IntegerField()),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frisbee_simulator_web.ufadivision')),
            ],
        ),
        migrations.CreateModel(
            name='UFAPlayerTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField()),
                ('year', models.IntegerField()),
                ('jersey_number', models.CharField(blank=True, max_length=10, null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frisbee_simulator_web.ufaplayer')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frisbee_simulator_web.ufateam')),
            ],
        ),
        migrations.CreateModel(
            name='UFAPlayerStatsGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assists', models.IntegerField()),
                ('goals', models.IntegerField()),
                ('hockey_assists', models.IntegerField()),
                ('completions', models.IntegerField()),
                ('throw_attempts', models.IntegerField()),
                ('throwaways', models.IntegerField()),
                ('stalls', models.IntegerField()),
                ('callahans_thrown', models.IntegerField()),
                ('yards_received', models.IntegerField()),
                ('yards_thrown', models.IntegerField()),
                ('hucks_attempted', models.IntegerField()),
                ('hucks_completed', models.IntegerField()),
                ('catches', models.IntegerField()),
                ('drops', models.IntegerField()),
                ('blocks', models.IntegerField()),
                ('callahans_caught', models.IntegerField()),
                ('pulls', models.IntegerField()),
                ('ob_pulls', models.IntegerField()),
                ('recorded_pulls', models.IntegerField()),
                ('recorded_pulls_hangtime', models.IntegerField()),
                ('o_points_played', models.IntegerField()),
                ('o_points_scored', models.IntegerField()),
                ('d_points_played', models.IntegerField()),
                ('d_points_scored', models.IntegerField()),
                ('seconds_played', models.IntegerField()),
                ('o_opportunities', models.IntegerField()),
                ('o_opportunity_scores', models.IntegerField()),
                ('d_opportunities', models.IntegerField()),
                ('d_opportunity_stops', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ufa_player_stats', to='frisbee_simulator_web.ufagame')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ufa_game_stats', to='frisbee_simulator_web.ufaplayer')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ufa_game_stats', to='frisbee_simulator_web.ufateam')),
            ],
        ),
        migrations.AddField(
            model_name='ufaplayer',
            name='teams',
            field=models.ManyToManyField(through='frisbee_simulator_web.UFAPlayerTeam', to='frisbee_simulator_web.ufateam'),
        ),
        migrations.CreateModel(
            name='UFAGameEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ufa_id', models.CharField(max_length=50, unique=True)),
                ('type', models.IntegerField()),
                ('line', models.JSONField()),
                ('time', models.FloatField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='frisbee_simulator_web.ufagame')),
            ],
        ),
        migrations.AddField(
            model_name='ufagame',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_games', to='frisbee_simulator_web.ufateam'),
        ),
        migrations.AddField(
            model_name='ufagame',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_games', to='frisbee_simulator_web.ufateam'),
        ),
        migrations.AddConstraint(
            model_name='ufaplayerteam',
            constraint=models.UniqueConstraint(condition=models.Q(('active', True)), fields=('player', 'team', 'year'), name='unique_active_ufa_player_team'),
        ),
    ]
